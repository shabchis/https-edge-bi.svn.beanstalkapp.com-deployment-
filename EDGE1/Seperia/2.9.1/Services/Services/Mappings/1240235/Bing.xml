<?xml version="1.0" encoding="utf-8" ?>	

<Mappings>
<Using Namespace="Edge.Data.Objects.{0}, Edge.Data.Pipeline"/>
<Object Type="Ad">
<Read Var="destUrl" Field='DestinationUrl' Regex='(\bolgs_tr=(?{edgetrackerid}\w+\{*[a-z]*\}*))'/>
<Read Var="destUrl2" Field='DestinationUrl' Regex='(\bEcid=(?{edgetrackerid}\w+\{*[a-z]*\}*))'/>
<Read Var="ad_id" Field='AdId' Required='true'/>
<Map To='Segments[{GetSegment("Tracker")}]::SegmentObject' Condition='destUrl != null'>

<Map To='Value'  Value="No Tracker For Ad {ad_id}" Condition='destUrl == null &amp;&amp; destUrl2 == null' Required="false"/>
<Map To='OriginalID'  Value="No Tracker For Ad {ad_id}" Condition='destUrl == null &amp;&amp; destUrl2 == null' Required="false"/>


<Map To='Value'  Value="{destUrl.edgetrackerid}" Condition='destUrl2 == null &amp;&amp; destUrl != null &amp;&amp; destUrl.edgetrackerid.ToString()!="140{AdId}"' Required="false"/>

<Map To='Value'  Value="{destUrl2.edgetrackerid}" Condition='destUrl == null &amp;&amp; destUrl2 != null &amp;&amp; destUrl2.edgetrackerid.ToString()!="140{AdId}"' Required="false"/>


<Map To='Value'  Value="140{ad_id}" Condition='(destUrl != null &amp;&amp; destUrl.edgetrackerid.ToString()=="140{AdId}") || (destUrl2 != null &amp;&amp; destUrl2.edgetrackerid.ToString()=="140{AdId}")' Required="false"/>

<Map To='OriginalID'  Value="{destUrl.edgetrackerid}" Condition='destUrl2 == null &amp;&amp; destUrl != null &amp;&amp; destUrl.edgetrackerid.ToString()!="140{AdId}"' Required="false"/>

<Map To='OriginalID'  Value="{destUrl2.edgetrackerid}" Condition='destUrl == null &amp;&amp; destUrl2 != null &amp;&amp; destUrl2.edgetrackerid.ToString()!="140{AdId}"' Required="false"/>


<Map To='OriginalID'  Value="140{ad_id}" Condition='(destUrl != null &amp;&amp; destUrl.edgetrackerid.ToString()=="140{AdId}") || (destUrl2 != null &amp;&amp; destUrl2.edgetrackerid.ToString()=="140{AdId}")' Required="false"/>

</Map>
</Object>
</Mappings>

										 
										 
										 


						   
						   
